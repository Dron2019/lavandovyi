@mixin font-face($font-family, $url, $weight: normal, $style: normal, $asset-pipeline: false) {
  @font-face {
    font-family: '#{$font-family}';
    font-weight: #{$weight};
    font-style: '#{$style}';

    src: url('#{$url}.eot');
    src: url('#{$url}.eot?#iefix') format('embedded-opentype'), url('#{$url}.woff') format('woff'),
      url('#{$url}.ttf') format('truetype');
  }
}

@mixin font-face-one-type(
  $font-family,
  $url,
  $type,
  $weight: normal,
  $style: normal,
  $asset-pipeline: false
) {
  @font-face {
    font-family: '#{$font-family}';
    font-weight: #{$weight};
    font-style: '#{$style}';

    $format: '';

    @if $type == 'ttf' {
      $format: 'truetype';
    } @else if $type == 'eot' {
      $format: 'embedded-opentype';
    } @else if $type == 'woff' {
      $format: 'woff';
    }
    src: url('#{$url}.#{$type}') format($format);
  }
}

// Function for converting a px based font-size to rem.
@function rem($size) {
  $remSize: $size / 14px;
  @return #{$remSize}rem;
}

@mixin toh($max_height) {
  @media screen and (max-height: $max_height) {
    @content;
  }
}

@mixin resetLinkStyles {
  text-decoration: none;
  text-transform: uppercase;
}

@mixin resetBtnStyles {
  border: none;
  outline: none;
  background: transparent;
  cursor: pointer;
  padding: 0;
}

@mixin after-before-img($url, $width, $height) {
  content: '';
  background-image: url($url);
  background-size: $width $height;
  display: inline-block;
  width: $width;
  height: $height;
}

@mixin baseFlexStyle($align-items: flex-start, $justify-content: flex-start, $flex-direction: row) {
  display: flex;
  align-items: $align-items;
  justify-content: $justify-content;
  flex-direction: $flex-direction;
}

@mixin setImgWidth($width) {
  width: $width;
  height: auto;
  object-fit: cover;
}

@mixin setImgHeight($height) {
  width: auto;
  height: $height;
  object-fit: cover;
}

@mixin width-heigth($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin setFontStyle(
  $font-family,
  $font-size,
  $font-weight,
  $color,
  $line-height: initial,
  $letter-spacing: initial,
  $text-transform: uppercase
) {
  font-family: $font-family;
  font-size: $font-size;
  font-weight: $font-weight;
  color: $color;
  line-height: $line-height;
  letter-spacing: $letter-spacing;
  text-transform: $text-transform;
}

@mixin link-btns($width, $height, $bgcolor, $font-size) {
  width: $width;
  height: $height;
  background-color: $bgcolor;
  font-weight: 600;
  font-size: $font-size;
  line-height: 130%;
  text-transform: uppercase;
  color: $white-color;
  @include baseFlexStyle(center, center);
  text-decoration: none;
  border: none;
  outline: none;
  cursor: pointer;
}

@mixin slideBtns($border-color, $background: transparent) {
  border-radius: 50%;
  border: 2px solid $border-color;
  background: $background;
}

@mixin multiple-transitions($duration, $timing-func, $properties...) {
  $transition-property: '';
  @for $i from 1 through length($properties) {
    @if ($i == length($properties)) {
      $transition-property: #{$transition-property + nth($properties, $i)};
    } @else {
      $transition-property: #{$transition-property + nth($properties, $i) + ', '};
    }
  }
  transition-property: $transition-property;
  transition-duration: $duration;
  transition-timing-function: $timing-func;
}
